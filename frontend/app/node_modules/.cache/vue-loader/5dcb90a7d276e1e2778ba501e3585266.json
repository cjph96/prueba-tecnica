{"remainingRequest":"E:\\prueba_tecnica\\frontend\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\prueba_tecnica\\frontend\\app\\src\\views\\List_processes.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"E:\\prueba_tecnica\\frontend\\app\\src\\views\\List_processes.vue","mtime":1628607975595},{"path":"E:\\prueba_tecnica\\frontend\\app\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\prueba_tecnica\\frontend\\app\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\prueba_tecnica\\frontend\\app\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\prueba_tecnica\\frontend\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\prueba_tecnica\\frontend\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgp0YWJsZXsKICBmb250LXNpemU6IDE4cHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9CnRkewogIG1pbi13aWR0aDogMTUwcHg7Cn0KLmxvYWRlciB7CiAgbWFyZ2luOiBhdXRvOwogIGJvcmRlcjogMTZweCBzb2xpZCAjZjNmM2YzOyAvKiBMaWdodCBncmV5ICovCiAgYm9yZGVyLXRvcDogMTZweCBzb2xpZCAjMDAwOyAvKiBCbHVlICovCiAgYm9yZGVyLXJhZGl1czogNTAlOwogIHdpZHRoOiAxMjBweDsKICBoZWlnaHQ6IDEyMHB4OwogIGFuaW1hdGlvbjogc3BpbiAycyBsaW5lYXIgaW5maW5pdGU7Cn0KCkBrZXlmcmFtZXMgc3BpbiB7CiAgMCUgeyB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTsgfQogIDEwMCUgeyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpOyB9Cn0K"},{"version":3,"sources":["List_processes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"List_processes.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"container-fluid\">\n    <div v-if=\"processes.length == 0\">\n      <div class=\"row text-center\">\n        <div class=\"col-6 offset-3\">\n          <div class=\"loader\"></div>\n          <div>Loading list ...</div>\n        </div>\n      </div>\n    </div>\n    <div v-else>\n      <table class=\"table table-hover\">\n        <thead>\n          <tr>\n            <th>Process ID</th>\n            <th>Input</th>\n            <th>Output</th>\n            <th>Created at</th>\n            <th>Started at</th>\n            <th>Finished at</th>\n            <th>Status</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody v-for=\"process in processes\" :key=\"process.id\">\n          <tr>\n            <td>{{process.id}}</td>\n            <td>{{process.input}}</td>\n            <td>{{process.output}}</td>\n\n            <td>{{process.created_at.date}}</td>\n\n            <td v-if=\"process.started_at !== null\">\n              {{process.started_at.data}}\n            </td>\n            <td v-else></td>\n\n            <td v-if=\"process.finished_at !== null\">\n              {{process.finished_at.data}}\n            </td>\n            <td v-else></td>\n\n            <td v-if=\"process.status == 1\">\n              NOT STARTED\n            </td>\n            <td v-if=\"process.status == 2\">\n              PROCESSING\n            </td>\n            <td v-if=\"process.status == 3\">\n              FINISHED\n            </td>\n\n            <td v-if=\"process.status == 1\">\n              <button>â–¶ Start</button>\n            </td>\n            <td v-else></td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'List_processes',\n  /*props: {\n      msg: String\n  },*/\n  data() {\n    return {\n      processes: []\n    }\n  },\n  methods:{\n\n    async  get_processes(){\n      this.processes = await fetch(\"http://127.0.0.1:8081/api/process\", {\n      }) \n        .then(response => response.json())\n        .then(data => {\n          return data;\n        });\n    }\n\n  },\n  created(){\n    this.get_processes()\n  }\n}\n\n</script>\n\n<style>\n  table{\n    font-size: 18px;\n    text-align: center;\n  }\n  td{\n    min-width: 150px;\n  }\n  .loader {\n    margin: auto;\n    border: 16px solid #f3f3f3; /* Light grey */\n    border-top: 16px solid #000; /* Blue */\n    border-radius: 50%;\n    width: 120px;\n    height: 120px;\n    animation: spin 2s linear infinite;\n  }\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n</style>"]}]}