{"remainingRequest":"E:\\Docker\\prueba-tecnica\\frontend\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Docker\\prueba-tecnica\\frontend\\app\\src\\views\\Create_process.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"E:\\Docker\\prueba-tecnica\\frontend\\app\\src\\views\\Create_process.vue","mtime":1630935389628},{"path":"E:\\Docker\\prueba-tecnica\\frontend\\app\\node_modules\\css-loader\\dist\\cjs.js","mtime":1630935382547},{"path":"E:\\Docker\\prueba-tecnica\\frontend\\app\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1630935388999},{"path":"E:\\Docker\\prueba-tecnica\\frontend\\app\\node_modules\\postcss-loader\\src\\index.js","mtime":1630935385742},{"path":"E:\\Docker\\prueba-tecnica\\frontend\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1630935378686},{"path":"E:\\Docker\\prueba-tecnica\\frontend\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":1630935388998}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCnRleHRhcmVhew0KICB3aWR0aDogMTAwJTsNCn0NCmJ1dHRvbnsNCiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7DQogIGZvbnQtd2VpZ2h0OiBib2xkOw0KICBwYWRkaW5nOiA0cHgsOHB4LDRweCw4cHggDQp9DQojcmVzcG9uZXsNCiAgbWluLWhlaWdodDogMTAwcHg7DQp9DQo="},{"version":3,"sources":["Create_process.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Create_process.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"container-fluid m-4\">\r\n    <div class=\"row\">\r\n      <div class=\"col-10 offset-1 col-sm-8 offset-sm-2 col-md-6 offset-md-3 col-xl-4 offset-xl-2  border border-dark\">\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-12 font-weight-bold pt-3\">\r\n              Create Process\r\n              <hr class=\"text-dark\">\r\n            </div>\r\n            <div class=\"col-4 font-weight-bold\">\r\n              Type\r\n            </div>\r\n            <div class=\"col-4 \">\r\n              <select class=\"custom-select\" v-model=\"type\">\r\n                <option disabled value=\"\"></option>\r\n                <option value=\"1\">VOWELS_COUNT</option>\r\n              </select>\r\n            </div>\r\n            <div class=\"col-12 mt-4 font-weight-bold\">\r\n              Input\r\n            </div>\r\n            <div class=\"col-12 mt-2 mb-3\">\r\n              <textarea v-model=\"input\" name=\"input\" rows=\"5\"></textarea>\r\n            </div>\r\n            <div class=\"col-3\">\r\n              <button @click=\"post_process\" >Create</button>\r\n            </div>\r\n            <div class=\"col-8\">\r\n              <button >Create and Run</button>\r\n            </div>\r\n            <div id=\"respone\" :class=\"text_color\" class=\"col-12 mt-3\">\r\n              {{resp}}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: 'Create_process',\r\n  data() {\r\n    return {\r\n      type: Number,\r\n      resp: '',\r\n      input: '',\r\n      text_color: 'text-dark'\r\n    }\r\n  },\r\n  methods:{\r\n\r\n    async  post_process(){\r\n      const data_submit = {\r\n        \"type\" : this.type,\r\n        \"input\": this.input\r\n      }\r\n\r\n      const url = \"http://\"+ window.location.hostname +\":8081/api/process\"\r\n      this.resp = await fetch(url, {\r\n        method: 'POST',\r\n        cache: 'no-cache',\r\n        headers: {\r\n          //'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(data_submit)\r\n        //body: data_submit\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          if(data.error){\r\n            this.text_color = 'text-danger'\r\n            return data.message\r\n          }\r\n            this.text_color = 'text-success'\r\n          return \"Proceso creado correctamente: \" + data.id\r\n        });\r\n\r\n      console.log(this.resp)\r\n    }\r\n\r\n  },\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\ntextarea{\r\n  width: 100%;\r\n}\r\nbutton{\r\n  background-color: white;\r\n  font-weight: bold;\r\n  padding: 4px,8px,4px,8px \r\n}\r\n#respone{\r\n  min-height: 100px;\r\n}\r\n</style>"]}]}